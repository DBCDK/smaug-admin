version: '3'
services:
  redis:
    image: redis:5.0.6
  database:
    image: postgres:9.6
    environment:
      - POSTGRES_USER=smaug
      - POSTGRES_HOST_AUTH_METHOD=trust
  smaug:
    image: 'docker-ux.dbc.dk/smaug-master:35'
    environment:
      - NODE_ENV=production
      - PORT=3001
      - PORT_ADMIN=3002
      - PORT_CONFIG=3003
      - MOCK_CULR=1
      - MOCK_BORCHK=1
      - "ADMIN_USERS={\"admin\": \"admin\"}"
      - DEFAULT_LIBRARY_ID=190101
      - SERVICE_REQUESTER=login.bib.dk
      - BORCHK_WSDL=https://borchk.addi.dk/2.5/?wsdl
      - CONFIG_USER_SALT=xxx
      - CONFIG_NETPUNKT_USER=xxx
      - CONFIG_NETPUNKT_GROUP=xxx
      - CONFIG_NETPUNKT_PASSWORD=xxx
      - CONFIG_PERFORMANCE_PASSWORD=xxx
      - CONFIG_PERFORMANCE_USERNAME=xxx
      - DATABASE_URI=postgres://smaug@database/smaug
      - REDIS=redis://redis
    depends_on:
      - database
      - redis
    command: bash -c 'while !</dev/tcp/database/5432; do sleep 1; done; npm run start'
  web:
    ipc: host ## Prevent Docker Crash in Cypress (https://github.com/cypress-io/cypress/issues/350)
    image: '${IMAGE:-docker-frontend.dbc.dk/smaug-admin:latest}'
    command: bash -c 'node src/server/index.js'
    environment: 
      - SMAUG_URI=http://smaug:3002
  e2e:
    ipc: host ## Prevent Docker Crash in Cypress (https://github.com/cypress-io/cypress/issues/350)
    image: docker.dbc.dk/cypress:latest
    volumes:
      - './e2e:/app/e2e'
    depends_on:
      - web
    environment:
      - CYPRESS_baseUrl=http://web:1234
    command: bash -c 'until $$(curl --output /dev/null --silent --head --fail http://web:1234/ready); do printf '.'; sleep 5; done; npm run cy'
